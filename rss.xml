<?xml version="1.0" encoding="utf-8"?>
<?xml-stylesheet type="text/xsl" href="assets/xml/rss.xsl" media="all"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:dc="http://purl.org/dc/elements/1.1/"><channel><title>Superluser</title><link>http://rose.github.io/</link><description># sudo man sudo</description><atom:link href="http://rose.github.io/rss.xml" type="application/rss+xml" rel="self"></atom:link><language>en</language><lastBuildDate>Sun, 16 Nov 2014 23:28:40 GMT</lastBuildDate><generator>http://getnikola.com/</generator><docs>http://blogs.law.harvard.edu/tech/rss</docs><item><title>Prime Time</title><link>http://rose.github.io/posts/prime-time/</link><dc:creator>Rose Ames</dc:creator><description>&lt;div&gt;&lt;p&gt;I just finished pairing with Gargravarr. &lt;a class="footnote-reference" href="http://rose.github.io/posts/prime-time/#id3" id="id1"&gt;[1]&lt;/a&gt;  My sinister metacarpals have been in revolt for the last couple of days, &lt;a class="footnote-reference" href="http://rose.github.io/posts/prime-time/#id4" id="id2"&gt;[2]&lt;/a&gt; so he drove and I mumbled incoherently &amp;lt;esc&amp;gt;d2bi navigated.  We're learning Rust and finding it a little rough.&lt;/p&gt;
&lt;p&gt;&lt;a href="http://rose.github.io/posts/prime-time/"&gt;Read more…&lt;/a&gt; (2 min remaining to read)&lt;/p&gt;&lt;/div&gt;</description><guid>http://rose.github.io/posts/prime-time/</guid><pubDate>Mon, 17 Nov 2014 02:43:54 GMT</pubDate></item><item><title>Real Time</title><link>http://rose.github.io/posts/real-time/</link><dc:creator>Rose Ames</dc:creator><description>&lt;div&gt;&lt;p&gt;I don't understand how software companies schedule jobs at all.  Anything a programmer knows how to do, she automates.  By definition, the remaining work involves flailing desperately across a sea of poor documentation and broken dreams, wearing the cement shoes of our own ignorance.&lt;/p&gt;
&lt;p&gt;This summer I did a short contract, for which I had to track my time.  Here's a log excerpt for a typical 5 minute task:&lt;/p&gt;
&lt;pre class="code literal-block"&gt;
8:00 - try easy straightforward thing that will definitely work in less than 5 minutes
8:03 - wtf
8:04 - google
8:18 - try stack overflow solution that worked for 687 other people
8:20 - WTF
8:26 - reboot server
8:31 - google
8:38 - reinstall python
8:53 - read documentation of all software involved in easy straightforward thing
10:18 - reinstall grub
11:27 - read source code of all software involved in easy straightforward thing
16:87 - WHY IS THIS HAPPENING TO ME 16:87 ISN'T EVEN A REAL TIME
1:32 - try easy thing that I tried at 8:00
1:33 - it worked.  W.  Tf.
1:34 - sooo... how many hours should I bill for this?
&lt;/pre&gt;&lt;/div&gt;</description><guid>http://rose.github.io/posts/real-time/</guid><pubDate>Sun, 16 Nov 2014 02:05:37 GMT</pubDate></item><item><title>Meet Mr O</title><link>http://rose.github.io/posts/meet-mr-o/</link><dc:creator>Rose Ames</dc:creator><description>&lt;div&gt;&lt;p&gt;A while back I &lt;a class="reference external" href="http://rose.github.io/posts/methodical-bondage/"&gt;promised&lt;/a&gt; to add inheritance to the quick-n-dirty 'classes' I wrote in javascript.  But, I realized that this requires some background on the problems that can arise with multiple inheritance.  So, let's look at how this works in Python, and then we'll implement the algorithm in a later post.&lt;/p&gt;
&lt;p&gt;Recall that inheritance is a way to find attributes on an object that the object and its class do not have themselves.  We can think of it as getting advice from a friend:&lt;/p&gt;
&lt;pre class="code python literal-block"&gt;
&lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;Carol&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
  &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;hide_body&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="s"&gt;"Carol says:  I think there's still room in the root cellar."&lt;/span&gt;

&lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;Bob&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;Carol&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
  &lt;span class="k"&gt;pass&lt;/span&gt;

&lt;span class="n"&gt;bob&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;Bob&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;span class="k"&gt;print&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;bob&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;hide_body&lt;/span&gt;&lt;span class="p"&gt;())&lt;/span&gt; &lt;span class="c"&gt;# "Carol says:  I think there's still room in the root cellar."&lt;/span&gt;
&lt;/pre&gt;
&lt;p&gt;&lt;em&gt;note: these code samples use Python 3.  If you're using Python 2, you should have all base classes inherit from object&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Even though Bob doesn't know how to solve his basic life problems, he's ok, because Carol has his back.  Things get a little more complicated when we add more friends:&lt;/p&gt;
&lt;pre class="code python literal-block"&gt;
&lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;James&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
  &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;hide_body&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="s"&gt;"James says:  Just turn it over.  If it can't see the police, the police can't see it."&lt;/span&gt;

&lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;Betty&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;Bob&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;James&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
  &lt;span class="k"&gt;pass&lt;/span&gt;

&lt;span class="n"&gt;betty&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;Betty&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;span class="k"&gt;print&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;betty&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;hide_body&lt;/span&gt;&lt;span class="p"&gt;())&lt;/span&gt;
&lt;/pre&gt;
&lt;p&gt;Does Betty's golf instructor end up in Carol's root cellar or not?&lt;/p&gt;
&lt;p&gt;&lt;a href="http://rose.github.io/posts/meet-mr-o/"&gt;Read more…&lt;/a&gt; (4 min remaining to read)&lt;/p&gt;&lt;/div&gt;</description><category>python</category><guid>http://rose.github.io/posts/meet-mr-o/</guid><pubDate>Sat, 15 Nov 2014 01:37:02 GMT</pubDate></item><item><title>The Write Stuff</title><link>http://rose.github.io/posts/the-write-stuff/</link><dc:creator>Rose Ames</dc:creator><description>&lt;div&gt;&lt;p&gt;I was talking with Gargravarr &lt;a class="footnote-reference" href="http://rose.github.io/posts/the-write-stuff/#id3" id="id1"&gt;[1]&lt;/a&gt; recently about writing, and he asked how much work I put into my blog posts.  The answer is a lot.  I treat instant messages like emails, emails like term papers, term papers like Master's theses, and Master's theses like - well, who knows.  I'm a little high strung, is what I'm saying.&lt;/p&gt;
&lt;p&gt;My first drafts usually look like this:&lt;/p&gt;
&lt;pre class="code literal-block"&gt;
Hah, C++ is weird.  And javascript.  But they're different.

My favourite chocolate bar used to be Snickers, but I now I don't like them as much, and

Forth something something (dick joke?)

One really clever sentence for beginning a blog post is

Dammit.
&lt;/pre&gt;
&lt;p&gt;Used to be I'd give up around here, because how the hell is that going to turn into anything that anyone would want to read?&lt;/p&gt;
&lt;p&gt;&lt;a href="http://rose.github.io/posts/the-write-stuff/"&gt;Read more…&lt;/a&gt; (1 min remaining to read)&lt;/p&gt;&lt;/div&gt;</description><guid>http://rose.github.io/posts/the-write-stuff/</guid><pubDate>Fri, 14 Nov 2014 03:36:01 GMT</pubDate></item><item><title>Measured In Wats</title><link>http://rose.github.io/posts/measured-in-wats/</link><dc:creator>Rose Ames</dc:creator><description>&lt;div&gt;&lt;p&gt;Knowledge is power - it's measured in wats.  That's the best line in the post, but you can keep reading if you want.&lt;/p&gt;
&lt;p&gt;Javascript has a parseInt function that does what you'd expect:&lt;/p&gt;
&lt;pre class="code javascript literal-block"&gt;
&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="nb"&gt;parseInt&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;"3"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="mi"&gt;3&lt;/span&gt;
&lt;/pre&gt;
&lt;p&gt;Its array prototype has a map function which also does what you'd expect:&lt;/p&gt;
&lt;pre class="code javascript literal-block"&gt;
&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;foo&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;addOne&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;x&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nx"&gt;x&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;foo&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;map&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;addOne&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;[&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;4&lt;/span&gt; &lt;span class="p"&gt;]&lt;/span&gt;
&lt;/pre&gt;
&lt;p&gt;I lied.  Neither of these functions does what you probably think they do, at least not exactly.&lt;/p&gt;
&lt;pre class="code javascript literal-block"&gt;
&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;'7'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="s1"&gt;'9'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="s1"&gt;'11'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="s1"&gt;'13'&lt;/span&gt;&lt;span class="p"&gt;].&lt;/span&gt;&lt;span class="nx"&gt;map&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;parseInt&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;
&lt;p&gt;I'm not going to tell you what the output of that is.  Type it in to your browser console or Node.  I dare you.&lt;/p&gt;
&lt;p&gt;&lt;a href="http://rose.github.io/posts/measured-in-wats/"&gt;Read more…&lt;/a&gt; (3 min remaining to read)&lt;/p&gt;&lt;/div&gt;</description><guid>http://rose.github.io/posts/measured-in-wats/</guid><pubDate>Thu, 13 Nov 2014 01:37:43 GMT</pubDate></item><item><title>The Poor Workman</title><link>http://rose.github.io/posts/the-poor-workman/</link><dc:creator>Rose Ames</dc:creator><description>&lt;div&gt;&lt;p&gt;Recently I found, not one, but &lt;em&gt;two&lt;/em&gt; people who actually admitted to liking C++!  I had always thought myself alone in that particular perversion.  These people were in a much better position to judge it than I - they both work in C++ for Google, which I understand is an advertising company of some kind that has a largish codebase.&lt;/p&gt;
&lt;p&gt;Programmers are people, &lt;a class="footnote-reference" href="http://rose.github.io/posts/the-poor-workman/#id8" id="id1"&gt;[1]&lt;/a&gt; and programming languages, like anything else people talk about, come in and out of fashion.  This has been on my mind since applying for &lt;a class="reference external" href="http://gnome.org/opw/"&gt;OPW&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;&lt;a href="http://rose.github.io/posts/the-poor-workman/"&gt;Read more…&lt;/a&gt; (3 min remaining to read)&lt;/p&gt;&lt;/div&gt;</description><guid>http://rose.github.io/posts/the-poor-workman/</guid><pubDate>Wed, 12 Nov 2014 04:13:03 GMT</pubDate></item><item><title>Taste Test</title><link>http://rose.github.io/posts/taste-test/</link><dc:creator>Rose Ames</dc:creator><description>&lt;div&gt;&lt;p&gt;&lt;em&gt;Note: If you got here while googling for answers to your homework, use this code and be welcome!  With a few modifications it will work for fizzbuzz and the traveling salesman problem as well.&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;a class="reference external" href="http://rose.github.io/posts/in-which-i-mind-the-gap/"&gt;In Which I Mind the Gap&lt;/a&gt; has gotten a lot more response than I expected. &lt;a class="footnote-reference" href="http://rose.github.io/posts/taste-test/#id2" id="id1"&gt;[1]&lt;/a&gt;  Apparently a lot of people, some of whom are inarguably much better programmers than me, are hypercritical of their own code.  One of them questioned whether he had any taste at all, and I wrote this in response:&lt;/p&gt;
&lt;p&gt;&lt;a href="http://rose.github.io/posts/taste-test/"&gt;Read more…&lt;/a&gt; (1 min remaining to read)&lt;/p&gt;&lt;/div&gt;</description><guid>http://rose.github.io/posts/taste-test/</guid><pubDate>Tue, 11 Nov 2014 03:13:38 GMT</pubDate></item><item><title>The Post of My Dreams</title><link>http://rose.github.io/posts/the-post-of-my-dreams/</link><dc:creator>Rose Ames</dc:creator><description>&lt;div&gt;&lt;p&gt;Hoo boy.  You know you're running out of material when you start talking about that weird dream you had.&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;I am washing dishes when I realize that it is a repetitive task, which means I should automate it. I write a short bash script and then think, "Awesome, now I can have more interesting dreams".&lt;/li&gt;
&lt;li&gt;I am having fun at the beach when someone asks me to go to a party. I can't decide whether to go, so I create a new branch and go to the party on that while staying at the beach on master. Afterwords I get a merge conflict and have to edit my brain.&lt;/li&gt;
&lt;li&gt;I am pacman, but the game was written as a text adventure ("You eat a dot. You eat a dot. You eat a dot. You hear a ghost approaching from a corridor on the left. You eat a dot....")&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Code tomorrow, I promise.&lt;/p&gt;&lt;/div&gt;</description><guid>http://rose.github.io/posts/the-post-of-my-dreams/</guid><pubDate>Mon, 10 Nov 2014 02:26:16 GMT</pubDate></item><item><title>Alternate Histories</title><link>http://rose.github.io/posts/alternate-histories/</link><dc:creator>Rose Ames</dc:creator><description>&lt;div&gt;&lt;p&gt;A couple days ago I wrote &lt;a class="reference external" href="http://rose.github.io/posts/starting-with-a-bang/"&gt;a post&lt;/a&gt; about bash's history completion.  It has since been brought to my attention that lesser programmers are in the habit of making "mistakes" when typing commands.  This post is dedicated to those unfortunate souls.&lt;/p&gt;
&lt;p&gt;If you're unsure what a history expansion will do, you can have bash print it out:&lt;/p&gt;
&lt;pre class="code console literal-block"&gt;
&lt;span class="gp"&gt;$&lt;/span&gt; touch !-3*:p  &lt;span class="c"&gt;# recall that !-3* is the arguments of the third most recent command.
&lt;/span&gt;&lt;span class="go"&gt;                # the new command is echoed but *not* run
touch king of the world&lt;/span&gt;
&lt;/pre&gt;
&lt;p&gt;The expanded line will be added to your history even though it wasn't run, so if it's what you wanted you can run it with !!.  If it's close but not quite right, hit up or ^P to edit it.&lt;/p&gt;
&lt;p&gt;&lt;a href="http://rose.github.io/posts/alternate-histories/"&gt;Read more…&lt;/a&gt; (1 min remaining to read)&lt;/p&gt;&lt;/div&gt;</description><guid>http://rose.github.io/posts/alternate-histories/</guid><pubDate>Sun, 09 Nov 2014 02:02:35 GMT</pubDate></item><item><title>Beginner Eye for the Expert Guy</title><link>http://rose.github.io/posts/beginner-eye-for-the-expert-guy/</link><dc:creator>Rose Ames</dc:creator><description>&lt;div&gt;&lt;p&gt;When I first installed linux I went through a phase of starting everything from a terminal ("lookit me, I'm a hacker!"), and &lt;em&gt;every friggin one of them&lt;/em&gt; filled the screen with:&lt;/p&gt;
&lt;pre class="code literal-block"&gt;
Info:  Invalid doohickey.
Warning:  Something bad is happening, just fyi.
Attempting to recover... failed.
Limping on valiantly.
Warning:  Doohickey appears to be growing fangs.
Warning:  Doohickey is attempting to
DOOHICKEY:  YOAR COMPUTER ARE BELONGE TO ME NOW
Info:  Emergency shunting from main loop in order to save humanity.  Tell my wife I love her.
Thanks for using VLC!
&lt;/pre&gt;
&lt;p&gt;Watching those poor mutilated programs flailing helplessly away at each other in my RAM, I wondered how my computer could function at all.  Now, of course, I ignore the pathetic cries for help unless something actually goes wrong.&lt;/p&gt;
&lt;p&gt;I think this transition explains the saying, "can do, can't teach".&lt;/p&gt;
&lt;p&gt;&lt;a href="http://rose.github.io/posts/beginner-eye-for-the-expert-guy/"&gt;Read more…&lt;/a&gt; (1 min remaining to read)&lt;/p&gt;&lt;/div&gt;</description><guid>http://rose.github.io/posts/beginner-eye-for-the-expert-guy/</guid><pubDate>Fri, 07 Nov 2014 10:09:54 GMT</pubDate></item></channel></rss>